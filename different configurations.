Configuring Opensearch - 1
1. Create a new Opensearch Domain using the AWS console
2. Select “VPC access” in the Network Section
3. In the “Fine-grained access control” section
a. Ensure Fine-grained access control is turned on
b. Create a Master User with a username and password of your choice. Take note
of the username and password used here.
4. In the “Access Policy section”, select “Only use fine-grained access control”.

Configuring Opensearch - 2
1. Create an IAM role for AWS Lambda with permissions for Opensearch.
2. Once the Opensearch domain is created, login to the Opensearch dashboard using
the dashboard URL. Enter the master username and password when prompted.
3. In the dashboard, navigate to Security using the menu on the left. The menu may
need to be expanded.
4. Select Roles and then select the all_access role
5. Choose Mapped users and then Manage mapping.
6. Under Backend roles, add the Amazon Resource Name (ARN) of the Lambda role
created in Step 1
7. Select Map and confirm the user or role shows up under Mapped users

Configuring Lambda Function 1 - pdftotxt
1. The purpose of this function is to convert the input PDF file into a text file.
2. The trigger for this function is an S3 PUT Event into the content store S3 bucket where
the sample PDF file is uploaded
3. The variable TARGET_BUCKET needs to be configured as an environmental variables
in this function. The value of the variable should be set to the name of the S3 bucket
used as intermediary storage
4. Ensure that the function has the role which allows access to the other services

Configuring Lambda Function 2-
upload-to-search
1. The purpose of this function is to process the text file generated by the previous
Lambda function pdftotxt and add the text to Opensearch
2. The trigger for this function is an S3 PUT Event into the S3 bucket being used as
intermediary storage
3. The handler for this function is in the file sample.py and is named handler. The
function runtime settings will need to be configured to point towards this handler
function.
4. The region being used for this activity and the domain URL of the Opensearch
domain created will need to be configured in the region and host variables.
5. Ensure that the function has the role which allows access to the other services

ConfiguringLambda Function 3-
search-gateway
1. The purpose of this function is to process the incoming HTTP requests from the API
Gateway to run search queries on the Opensearch domain.
2. The trigger for this function is an API request from the API gateway created as part of
this exercise
3. The handler for this function is in the file sample.py and is named lambda_handler.
The function runtime settings will need to be configured to point towards this handler
function.
4. Ensure that the function has the role which allows access to the other services

Configuring Lambda Function 4-
searchFunction
1. This function will receive the data entered into the search field and return the search
results.
2. The trigger for this function is an API request from the API gateway created as part of
this exercise
3. The region being used for this activity and the domain URL of the Opensearch
domain created will need to be configured in the region and host variables.
4. Ensure that the function has the role which allows access to the other service

